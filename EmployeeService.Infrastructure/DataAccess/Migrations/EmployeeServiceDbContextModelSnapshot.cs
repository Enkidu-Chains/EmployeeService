// <auto-generated />
using EmployeeService.Infrastructure.DataAccess;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;

#nullable disable

namespace EmployeeService.Infrastructure.DataAccess.Migrations
{
    [DbContext(typeof(EmployeeServiceDbContext))]
    partial class EmployeeServiceDbContextModelSnapshot : ModelSnapshot
    {
        protected override void BuildModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder.HasAnnotation("ProductVersion", "6.0.20");

            modelBuilder.Entity("EmployeeService.Infrastructure.DataAccess.Model.Company", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("INTEGER")
                        .HasColumnName("id");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("TEXT")
                        .HasColumnName("name");

                    b.HasKey("Id")
                        .HasName("pk_companies");

                    b.ToTable("companies", (string)null);
                });

            modelBuilder.Entity("EmployeeService.Infrastructure.DataAccess.Model.Department", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("INTEGER")
                        .HasColumnName("id");

                    b.Property<int>("CompanyId")
                        .HasColumnType("INTEGER")
                        .HasColumnName("company_id");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("TEXT")
                        .HasColumnName("name");

                    b.Property<string>("Phone")
                        .IsRequired()
                        .HasMaxLength(15)
                        .HasColumnType("TEXT")
                        .HasColumnName("phone");

                    b.HasKey("Id")
                        .HasName("pk_departments");

                    b.HasIndex("CompanyId")
                        .HasDatabaseName("ix_departments_company_id");

                    b.ToTable("departments", (string)null);
                });

            modelBuilder.Entity("EmployeeService.Infrastructure.DataAccess.Model.Employee", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("INTEGER")
                        .HasColumnName("id");

                    b.Property<int>("DepartmentId")
                        .HasColumnType("INTEGER")
                        .HasColumnName("department_id");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("TEXT")
                        .HasColumnName("name");

                    b.Property<int>("PassportId")
                        .HasColumnType("INTEGER")
                        .HasColumnName("passport_id");

                    b.Property<string>("Phone")
                        .IsRequired()
                        .HasMaxLength(15)
                        .HasColumnType("TEXT")
                        .HasColumnName("phone");

                    b.Property<string>("Surname")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("TEXT")
                        .HasColumnName("surname");

                    b.HasKey("Id")
                        .HasName("pk_employees");

                    b.HasIndex("DepartmentId")
                        .HasDatabaseName("ix_employees_department_id");

                    b.HasIndex("PassportId")
                        .IsUnique()
                        .HasDatabaseName("ix_employees_passport_id");

                    b.ToTable("employees", (string)null);
                });

            modelBuilder.Entity("EmployeeService.Infrastructure.DataAccess.Model.Passport", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("INTEGER")
                        .HasColumnName("id");

                    b.Property<string>("Number")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("TEXT")
                        .HasColumnName("number");

                    b.Property<int>("PassportTypeId")
                        .HasColumnType("INTEGER")
                        .HasColumnName("passport_type_id");

                    b.HasKey("Id")
                        .HasName("pk_passports");

                    b.HasIndex("PassportTypeId")
                        .HasDatabaseName("ix_passports_passport_type_id");

                    b.ToTable("passports", (string)null);
                });

            modelBuilder.Entity("EmployeeService.Infrastructure.DataAccess.Model.PassportType", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("INTEGER")
                        .HasColumnName("id");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("TEXT")
                        .HasColumnName("name");

                    b.HasKey("Id")
                        .HasName("pk_passport_types");

                    b.ToTable("passport_types", (string)null);
                });

            modelBuilder.Entity("EmployeeService.Infrastructure.DataAccess.Model.Department", b =>
                {
                    b.HasOne("EmployeeService.Infrastructure.DataAccess.Model.Company", null)
                        .WithMany()
                        .HasForeignKey("CompanyId")
                        .OnDelete(DeleteBehavior.NoAction)
                        .IsRequired()
                        .HasConstraintName("fk_departments_companies_company_id");
                });

            modelBuilder.Entity("EmployeeService.Infrastructure.DataAccess.Model.Employee", b =>
                {
                    b.HasOne("EmployeeService.Infrastructure.DataAccess.Model.Department", null)
                        .WithMany()
                        .HasForeignKey("DepartmentId")
                        .OnDelete(DeleteBehavior.NoAction)
                        .IsRequired()
                        .HasConstraintName("fk_employees_departments_department_id");

                    b.HasOne("EmployeeService.Infrastructure.DataAccess.Model.Passport", null)
                        .WithOne()
                        .HasForeignKey("EmployeeService.Infrastructure.DataAccess.Model.Employee", "PassportId")
                        .OnDelete(DeleteBehavior.ClientCascade)
                        .IsRequired()
                        .HasConstraintName("fk_employees_passports_passport_id");
                });

            modelBuilder.Entity("EmployeeService.Infrastructure.DataAccess.Model.Passport", b =>
                {
                    b.HasOne("EmployeeService.Infrastructure.DataAccess.Model.PassportType", null)
                        .WithMany()
                        .HasForeignKey("PassportTypeId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired()
                        .HasConstraintName("fk_passports_passport_types_passport_type_id");
                });
#pragma warning restore 612, 618
        }
    }
}
